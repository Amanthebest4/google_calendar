{"name":"Google calendar","tagline":"A fast lightweight and minimalist wrapper around the Google Calendar API.","body":"# Google Calendar\r\n\r\nA fast lightweight and minimalist wrapper around the [Google Calendar](https://www.google.com/calendar/) api.\r\n\r\n[![Build Status](https://travis-ci.org/northworld/google_calendar.png?branch=master)](https://travis-ci.org/northworld/google_calendar) [![Dependency Status](https://gemnasium.com/northworld/google_calendar.png)](https://gemnasium.com/northworld/google_calendar) [![Code Climate](https://codeclimate.com/github/northworld/google_calendar/badges/gpa.svg)](https://codeclimate.com/github/northworld/google_calendar) [![Test Coverage](https://codeclimate.com/github/northworld/google_calendar/badges/coverage.svg)](https://codeclimate.com/github/northworld/google_calendar)\r\n\r\n## Install\r\n```\r\n  [sudo] gem install 'google_calendar'\r\n```\r\n\r\n## Setup \r\n\r\n<b>Obtain a Client ID and Secret</b>\r\n\r\n1. Go to the {Google Developers Console}[https://console.developers.google.com/].\r\n1. Select a project, or create a new one.\r\n1. In the sidebar on the left, expand APIs & auth. Next, click APIs. In the list of APIs, make sure the status is ON for the Calendar API.\r\n1. In the sidebar on the left, select Credentials.\r\n1. In either case, you end up on the Credentials page and can create your project's credentials from here.\r\n1. If you haven't done so already, create your OAuth 2.0 credentials by clicking Create new Client ID under the OAuth heading. Next, look for your application's client ID and client secret in the relevant table. You may also create and edit redirect URIs from this page.\r\n\r\n<em>Take note of the Client ID as you'll need to add it to your code later.</em>\r\n\r\n<b>Find your calendar ID</b>\r\n\r\n1. Visit {Google Calendar}[https://www.google.com/calendar/] in your web browser.\r\n1. In the calendar list on the left, click the down-arrow button next to the appropriate calendar, then select Calendar settings.\r\n1. In the Calendar Address section, locate the Calendar ID listed next to the XML, ICAL and HTML buttons.\r\n1. Copy the Calendar ID.\r\n\r\n## Usage\r\n```\r\n  require 'rubygems'\r\n  require 'google_calendar'\r\n\r\n  YOUR_CLIENT_ID    = \"\"\r\n  YOUR_SECRET       = \"\"\r\n  YOUR_CALENDAR_ID  = \"\"\r\n\r\n  # Create an instance of the calendar.\r\n  cal = Google::Calendar.new(:client_id => YOUR_CLIENT_ID, \r\n                             :client_secret => YOUR_SECRET,\r\n                             :calendar => YOUR_CALENDAR_ID,\r\n                             :redirect_url => \"urn:ietf:wg:oauth:2.0:oob\" # this is what Google uses for 'applications'\r\n                             )\r\n\r\n  puts \"Do you already have a refresh token? (y/n)\"\r\n  has_token = $stdin.gets.chomp\r\n\r\n  if has_token.downcase != 'y'\r\n\r\n    # A user needs to approve access in order to work with their calendars.\r\n    puts \"Visit the following web page in your browser and approve access.\"\r\n    puts cal.authorize_url\r\n    puts \"\\nCopy the code that Google returned and paste it here:\"\r\n\r\n    # Pass the ONE TIME USE access code here to login and get a refresh token that you can use for access from now on.\r\n    refresh_token = cal.login_with_auth_code( $stdin.gets.chomp )\r\n\r\n    puts \"\\nMake sure you SAVE YOUR REFRESH TOKEN so you don't have to prompt the user to approve access again.\"\r\n    puts \"your refresh token is:\\n\\t#{refresh_token}\\n\"\r\n    puts \"Press return to continue\"\r\n    $stdin.gets.chomp\r\n\r\n  else\r\n    puts \"Enter your refresh token\"\r\n    refresh_token = $stdin.gets.chomp\r\n    cal.login_with_refresh_token(refresh_token)\r\n\r\n    # Note: You can also pass your refresh_token to the constructor and it will login at that time.\r\n\r\n  end\r\n\r\n  event = cal.create_event do |e|\r\n    e.title = 'A Cool Event'\r\n    e.start_time = Time.now\r\n    e.end_time = Time.now + (60 * 60) # seconds * min\r\n  end\r\n\r\n  puts event\r\n\r\n  event = cal.find_or_create_event_by_id(event.id) do |e|\r\n    e.title = 'An Updated Cool Event'\r\n    e.end_time = Time.now + (60 * 60 * 2) # seconds * min * hours\r\n  end\r\n\r\n  puts event\r\n\r\n  # All events\r\n  puts cal.events\r\n\r\n  # Query events\r\n  puts cal.find_events('your search string')\r\n```\r\nThis sample code is located in readme_code.rb in the root folder.\r\n\r\nNote: This is not a complete implementation of the calendar api, it just includes the features we needed to support our internal calendar integration.\r\n\r\n## Contributing to google_calendar\r\n\r\n* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet\r\n* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it\r\n* Fork the project\r\n* Start a feature/bugfix branch\r\n* Commit and push until you are happy with your contribution\r\n* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.\r\n* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2010-2014 Steve Zich. See LICENSE.txt for further details.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}